import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:gap/gap.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'package:vyavasaay_redesigned/database/database_helper.dart';
import 'package:vyavasaay_redesigned/screens/pages/patients/generate_new_bill.dart';
import 'package:vyavasaay_redesigned/utils/constants.dart';
import 'package:vyavasaay_redesigned/widgets/default_container.dart';

class BillHistory extends StatefulWidget {
  const BillHistory({super.key});

  @override
  State<BillHistory> createState() => _BillHistoryState();
}

class _BillHistoryState extends State<BillHistory> {
  final DatabaseHelper databaseHelper = DatabaseHelper();
  bool isAdminLogin = false;
  @override
  void initState() {
    super.initState();
    databaseHelper.initDB();
    getTechnicianInfo();
  }

  void getTechnicianInfo() async {
    final pref = await SharedPreferences.getInstance();
    String loggedInAs = pref.getString('logInType') ?? 'user';
    if (loggedInAs == 'admin') {
      isAdminLogin = true;
    } else {
      isAdminLogin = false;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        FutureBuilder(
          future: databaseHelper.getPatientList(),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return const Center(
                child: CircularProgressIndicator(),
              );
            }
            if (snapshot.hasError) {
              return Center(
                child: Text(
                  'Some error occurred!',
                  style: Theme.of(context).textTheme.titleLarge,
                ),
              );
            }
            if (snapshot.hasData) {
              if (snapshot.data!.isEmpty) {
                return Center(
                  child: Text(
                    'Empty List',
                    style: Theme.of(context).textTheme.titleLarge,
                  ),
                );
              }
            }
            return ListView.builder(
              itemCount: snapshot.data!.length,
              itemBuilder: (context, index) {
                return Card(
                  elevation: 0,
                  color: primaryCardColor,
                  child: ExpansionTile(
                    title: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(snapshot.data![index].name, style: patientHeader),
                        Gap(defaultSize),
                        Text(
                          snapshot.data![index].date,
                          style: patientHeaderSmall,
                        )
                      ],
                    ),
                    subtitle: Text(
                      snapshot.data![index].refBy,
                      style: patientHeaderSmall,
                    ),
                    childrenPadding: EdgeInsets.only(
                      left: defaultSize,
                      right: defaultSize,
                      bottom: defaultSize,
                    ),
                    children: [
                      Column(
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  PatientDetailsChild(
                                    heading: 'Age ',
                                    value: snapshot.data![index].age.toString(),
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Sex ',
                                    value: snapshot.data![index].sex,
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Bill generated by ',
                                    value: snapshot.data![index].technician,
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Remark ',
                                    value: snapshot.data![index].remark,
                                  ),
                                ],
                              ),
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.end,
                                children: [
                                  PatientDetailsChild(
                                    heading: 'Total ',
                                    value: snapshot.data![index].totalAmount
                                        .toString(),
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Paid ',
                                    value: snapshot.data![index].paidAmount
                                        .toString(),
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Discount given by center ',
                                    value: snapshot.data![index].discCen
                                        .toString(),
                                  ),
                                  Gap(defaultSize),
                                  PatientDetailsChild(
                                    heading: 'Discount given by doctor ',
                                    value: snapshot.data![index].discDoc
                                        .toString(),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Visibility(
                            visible: isAdminLogin,
                            child: Gap(defaultSize),
                          ),
                          Visibility(
                            visible: isAdminLogin,
                            child: GestureDetector(
                              onTap: () async {
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) {
                                      return GenerateNewBill(
                                        isUpdate: true,
                                        model: snapshot.data![index],
                                      );
                                    },
                                  ),
                                ).then((value) => setState(() {}));
                              },
                              child: DefaultContainer(
                                  color: primaryColor,
                                  height:
                                      getDeviceHeight(context: context) * 0.1,
                                  child: Center(
                                    child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        const Icon(
                                          Icons.edit_outlined,
                                          size: 30,
                                        ),
                                        Gap(defaultSize),
                                        Text(
                                          'Edit Bill',
                                          style: patientHeader,
                                        ),
                                      ],
                                    ),
                                  )),
                            ),
                          )
                        ],
                      )
                    ],
                  ),
                );
              },
            );
          },
        ),
        Positioned(
          bottom: 10,
          right: 0,
          child: GestureDetector(
            onTap: () async {
              await Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) {
                    return const GenerateNewBill();
                  },
                ),
              ).then(
                (value) {
                  if (value != 0) {
                    setState(() {});
                  }
                },
              );
            },
            child: DefaultContainer(
              height: MediaQuery.of(context).size.height * 0.1,
              width: 260,
              boxShadow: [
                BoxShadow(
                  color: primaryColorDark,
                  blurStyle: BlurStyle.outer,
                  blurRadius: 50,
                  spreadRadius: 0.5,
                ),
              ],
              child: Center(
                child: Text(
                  'Generate new bill',
                  style: Theme.of(context).textTheme.titleLarge!.copyWith(
                        fontSize: 28,
                      ),
                ),
              ),
            ),
          ),
        ),
      ],
    );
  }
}

class PatientDetailsChild extends StatelessWidget {
  const PatientDetailsChild({
    super.key,
    required this.heading,
    required this.value,
  });
  final String heading;
  final String value;

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        Text(
          heading,
          style: patientChildrenHeading,
        ),
        Text(
          value,
          style: patientHeaderSmall,
        ),
      ],
    );
  }
}
